/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Circle001: THREE.Mesh
    Circle001_1: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.003']: THREE.MeshStandardMaterial
  }
}

export default function Mug(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/mug.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group
        position={[-0.004, 0.006, -0.001]}
        rotation={[Math.PI, -1.423, Math.PI]}
        scale={0.25}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001.geometry}
          material={materials['Material.001']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_1.geometry}
          material={materials['Material.003']}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/models/mug.gltf')
